<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../VerifyNonESIFedProxyService.wsdl"/>
      <rootElement name="VerifyNonESIMECResponse" namespace="http://vnem.ee.sim.dsh.cms.hhs.gov"/>
    </source>
    <source type="WSDL">
      <schema location="../ReceiveRequestFromHaven.wsdl"/>
      <rootElement name="VerifyNonESIMECRequest" namespace="http://vnem.ee.sim.dsh.cms.hhs.gov/ESB/V1"/>
      <param name="ReceiveRequest_InputVariable.body" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../ReceiveRequestFromHaven.wsdl"/>
      <rootElement name="VerifyNonESIMECResponse" namespace="http://vnem.ee.sim.dsh.cms.hhs.gov/ESB/V1"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.8(build 150622.2350.0222) AT [TUE OCT 18 11:58:54 EDT 2016]. -->
?>
<xsl:stylesheet version="1.0" xmlns:tns="http://vnem.ee.sim.dsh.cms.hhs.gov"
                xmlns:ns8="http://niem.gov/niem/niem-core/2.0/ESB/V1"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns1="http://niem.gov/niem/niem-core/2.0"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:ns4="http://niem.gov/niem/appinfo/2.0"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:ns12="http://niem.gov/niem/structures/2.0/ESB/V1"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:ns2="http://niem.gov/niem/structures/2.0"
                xmlns:ns10="http://niem.gov/niem/fbi/2.0/ESB/V1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns3="http://niem.gov/niem/usps_states/2.0"
                xmlns:ns0="http://niem.gov/niem/fbi/2.0"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:WL5G3N3="http://schemas.xmlsoap.org/wsdl/soap12/"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/jms/Test/HavenNonESIservice/ReceiveRequestFromHaven"
                xmlns:ns9="http://niem.gov/niem/usps_states/2.0/ESB/V1"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:ns11="http://niem.gov/niem/proxy/xsd/2.0/ESB/V1"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns7="http://niem.gov/niem/appinfo/2.0/ESB/V1"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:imp1="http://vnem.ee.sim.dsh.cms.hhs.gov/ESB/V1"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                xmlns:ns5="http://niem.gov/niem/proxy/xsd/2.0"
                exclude-result-prefixes="xsl xsi tns ns8 wsp xsd ns1 plt ns4 pc ns12 ns2 ns10 ns3 ns0 WL5G3N3 ns6 ns9 ns11 wsdl ns7 jca imp1 ns5 oraext socket ora bpws xdk ids mhdr bpm xp20 hwf xref dvm med bpel ldap">
  <xsl:param name="ReceiveRequest_InputVariable.body"/>
  <xsl:template match="/">
    <imp1:VerifyNonESIMECResponse>
      <xsl:if test='/tns:VerifyNonESIMECResponse/tns:ResponseMetadata/tns:ResponseCode != " "'>
        <imp1:ResponseMetadata>
          <imp1:ResponseCode>
            <xsl:value-of select="/tns:VerifyNonESIMECResponse/tns:ResponseMetadata/tns:ResponseCode"/>
          </imp1:ResponseCode>
          <imp1:ResponseDescriptionText>
            <xsl:value-of select="/tns:VerifyNonESIMECResponse/tns:ResponseMetadata/tns:ResponseDescriptionText"/>
          </imp1:ResponseDescriptionText>
          <xsl:if test="/tns:VerifyNonESIMECResponse/tns:ResponseMetadata/tns:TDSResponseDescriptionText">
            <imp1:TDSResponseDescriptionText>
              <xsl:value-of select="/tns:VerifyNonESIMECResponse/tns:ResponseMetadata/tns:TDSResponseDescriptionText"/>
            </imp1:TDSResponseDescriptionText>
          </xsl:if>
        </imp1:ResponseMetadata>
      </xsl:if>
      <imp1:IndividualResponseSet>
        <xsl:for-each select="/tns:VerifyNonESIMECResponse/tns:IndividualResponseSet/tns:IndividualResponse">
          <imp1:IndividualResponse>
            <imp1:Applicant>
              <imp1:PersonSSNIdentification>
                <xsl:value-of select="tns:Applicant/tns:PersonSSNIdentification"/>
              </imp1:PersonSSNIdentification>
              <imp1:PersonName>
                <imp1:PersonGivenName>
                  <xsl:value-of select="tns:Applicant/tns:PersonName/tns:PersonGivenName"/>
                </imp1:PersonGivenName>
                <xsl:if test="tns:Applicant/tns:PersonName/tns:PersonMiddleName">
                  <imp1:PersonMiddleName>
                    <xsl:value-of select="tns:Applicant/tns:PersonName/tns:PersonMiddleName"/>
                  </imp1:PersonMiddleName>
                </xsl:if>
                <imp1:PersonSurName>
                  <xsl:value-of select="tns:Applicant/tns:PersonName/tns:PersonSurName"/>
                </imp1:PersonSurName>
                <xsl:if test="tns:Applicant/tns:PersonName/tns:PersonNameSuffixText">
                  <imp1:PersonNameSuffixText>
                    <xsl:value-of select="tns:Applicant/tns:PersonName/tns:PersonNameSuffixText"/>
                  </imp1:PersonNameSuffixText>
                </xsl:if>
              </imp1:PersonName>
              <ns8:PersonBirthDate>
                <xsl:if test="tns:Applicant/ns1:PersonBirthDate/@xsi:nil">
                  <xsl:attribute name="xsi:nil">
                    <xsl:value-of select="tns:Applicant/ns1:PersonBirthDate/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
              </ns8:PersonBirthDate>
            </imp1:Applicant>
            <imp1:PartialResponseIndicator>
              <xsl:value-of select="tns:PartialResponseIndicator"/>
            </imp1:PartialResponseIndicator>
            <xsl:for-each select="tns:OtherCoverage">
              <imp1:OtherCoverage>
                <imp1:OrganizationCode>
                  <xsl:value-of select="tns:OrganizationCode"/>
                </imp1:OrganizationCode>
                <imp1:ResponseMetadata>
                  <imp1:ResponseCode>
                    <xsl:value-of select="tns:ResponseMetadata/tns:ResponseCode"/>
                  </imp1:ResponseCode>
                  <imp1:ResponseDescriptionText>
                    <xsl:value-of select="tns:ResponseMetadata/tns:ResponseDescriptionText"/>
                  </imp1:ResponseDescriptionText>
                  <xsl:if test="tns:ResponseMetadata/tns:TDSResponseDescriptionText">
                    <imp1:TDSResponseDescriptionText>
                      <xsl:value-of select="tns:ResponseMetadata/tns:TDSResponseDescriptionText"/>
                    </imp1:TDSResponseDescriptionText>
                  </xsl:if>
                </imp1:ResponseMetadata>
                <xsl:if test="tns:MECCoverage">
                  <imp1:MECCoverage>
                    <xsl:if test="tns:MECCoverage/ns1:LocationStateUSPostalServiceCode">
                      <ns8:LocationStateUSPostalServiceCode>
                        <xsl:if test="tns:MECCoverage/ns1:LocationStateUSPostalServiceCode/@xsi:nil">
                          <xsl:attribute name="xsi:nil">
                            <xsl:value-of select="tns:MECCoverage/ns1:LocationStateUSPostalServiceCode/@xsi:nil"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="tns:MECCoverage/ns1:LocationStateUSPostalServiceCode"/>
                      </ns8:LocationStateUSPostalServiceCode>
                    </xsl:if>
                    <imp1:MECVerificationCode>
                      <xsl:value-of select="tns:MECCoverage/tns:MECVerificationCode"/>
                    </imp1:MECVerificationCode>
                    <xsl:for-each select="tns:MECCoverage/ns1:Insurance">
                      <ns8:Insurance>
                        <xsl:if test="@xsi:nil">
                          <xsl:attribute name="xsi:nil">
                            <xsl:value-of select="@xsi:nil"/>
                          </xsl:attribute>
                        </xsl:if>
                        <ns8:InsuranceEffectiveDate>
                          <xsl:if test="ns1:InsuranceEffectiveDate/@xsi:nil">
                            <xsl:attribute name="xsi:nil">
                              <xsl:value-of select="ns1:InsuranceEffectiveDate/@xsi:nil"/>
                            </xsl:attribute>
                          </xsl:if>
                        </ns8:InsuranceEffectiveDate>
                        <xsl:if test="ns1:InsuranceEndDate">
                          <ns8:InsuranceEndDate>
                            <xsl:if test="ns1:InsuranceEndDate/@xsi:nil">
                              <xsl:attribute name="xsi:nil">
                                <xsl:value-of select="ns1:InsuranceEndDate/@xsi:nil"/>
                              </xsl:attribute>
                            </xsl:if>
                          </ns8:InsuranceEndDate>
                        </xsl:if>
                      </ns8:Insurance>
                    </xsl:for-each>
                  </imp1:MECCoverage>
                </xsl:if>
              </imp1:OtherCoverage>
            </xsl:for-each>
          </imp1:IndividualResponse>
        </xsl:for-each>
      </imp1:IndividualResponseSet>
      <imp1:HavenID>
        <xsl:value-of select="$ReceiveRequest_InputVariable.body/imp1:VerifyNonESIMECRequest/imp1:HavenID"/>
      </imp1:HavenID>
      <imp1:RequestNumber>
        <xsl:value-of select="$ReceiveRequest_InputVariable.body/imp1:VerifyNonESIMECRequest/imp1:RequestNumber"/>
      </imp1:RequestNumber>
    </imp1:VerifyNonESIMECResponse>
  </xsl:template>
</xsl:stylesheet>
